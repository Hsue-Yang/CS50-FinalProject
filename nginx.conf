
#user  activate worker;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

# each worker process 1024 connections
events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #------------------------------------------------------------
    # 設定「限制併發連線」的 zone
    #------------------------------------------------------------
    # 1. $binary_remote_addr：用客戶端 IP 當 key
    # 2. zone=perip:10m    ：取名 perip，使用 10MB 記憶體存放統計資料
    #    -> 大約可放 16 萬個不同 IP 的連線計數
    # limit_conn_zone $binary_remote_addr zone=perip:10m;
    #------------------------------------------------------------
    # 設定「全站總併發連線」的 zone
    #------------------------------------------------------------
    # 1. $server_name：用目前 server_name 當 key（整個虛擬主機共用）
    # 2. zone=perserver:10m：同樣 10MB，統計整個服務的併發連線
    # limit_conn_zone $server_name zone=perserver:10m;
    #------------------------------------------------------------
    # 設定「限制請求速率」的 zone
    #------------------------------------------------------------
    # 1. limit_req_zone 同樣分 per-IP / per-server
    # 2. rate=1r/s  ：每秒允許 1 個請求
    #    rate=10r/s ：每秒允許 10 個請求
    # limit_req_zone $binary_remote_addr zone=perip:10m rate=1r/s;
    # limit_req_zone $server_name zone=perserver:10m rate=10r/s;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    #alias
    # upstream app {
    #     server localhost:3000;
    # }

    server {
        listen       80; # http default port
        server_name  pricecompare.duckdns.org; # deal with domain request

        #--------------------------------------------------------
        # 針對單一 IP 的最大併發連線數
        #  - 當同一 IP 的 socket 連線超過 10 條就拒絕
        #  - 防止單一用戶或惡意行程用過多連線吃光資源
        # limit_conn perip 10;
        #--------------------------------------------------------
        # 針對整個虛擬主機（all IP 總和）的最大併發連線
        #  - 全站同時最多 20 條連線
        #  - 防止瞬間流量暴增壓過 Nginx/後端
        # limit_conn perserver 20;
        #--------------------------------------------------------
        # 單一連線的下載速度上限 (bytes/s)
        #  - 適合大檔案下載時放慢速度，避免佔滿頻寬
        #  - 這裡每秒 1024kB
        # limit_rate 1024k;
        #--------------------------------------------------------
        # 每個 IP 每秒最大請求率 + 突發緩衝 (burst)
        #  - zone=reqperip（1r/s）：穩定速率 1 request/sec
        #  - burst=5：可允許「突發」多出 5 個請求立刻處理
        #  - nodelay：超過穩定速率不延遲直接丟回 503
        #  - 防止單一 IP 惡意快速重複呼叫 API
        # limit_req zone=perip burst=5 nodelay;
         #--------------------------------------------------------
        # 全站請求率限制：同理
        #  - zone=reqperserver（10r/s）：整個站台每秒 10 request
        #  - burst=10：短時間最多允許突發 10 個請求
        #  - 這裡沒有 nodelay，超出的請求會被緩衝後延遲處理
        #  - 防止整站瞬間壅塞
        # limit_req zone=perserver burst=10;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
        # 請求路徑以 /ApiLog/ 開頭
        # location ^~ /ApiLog/ {
        #     proxy_pass         http://app/SFarmerWelfare/ApiLog/;
        #     proxy_http_version 1.1; #open coneection between nginx to upstream
        #     proxy_set_header   Upgrade            $http_upgrade; #websocket
        #     proxy_set_header   Connection         "Upgrade";    #websocket signalR
        #     proxy_set_header   Host               $host;
        #     proxy_cache_bypass $http_upgrade;
        #     proxy_set_header   X-Real-IP          $remote_addr;
        #     proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for; #user info
        # }

        # 其他路徑一律走這
        location / {
            # root   html;
            # index  index.html index.htm;
            proxy_pass       http://web:8000; # web is service name in docker-compose
            proxy_set_header   Host               $host;
            proxy_set_header   X-Real-IP          $remote_addr;
            proxy_set_header   X-Forwarded-For    $proxy_add_x_forwarded_for;
        }
        location /static/ {
            alias /app/staticfiles/;
            # 這裡可以設定靜態檔案的快取時間
            expires 30d; # 30 天
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
